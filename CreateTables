--To create Police Unit Table
CREATE TABLE POLICEUNIT(
	PoliceUnitID		INT		NOT NULL	UNIQUE,
	PoliceUnitName		NVARCHAR(25)	NOT NULL,
	PoliceUnitPhoneNo	NVARCHAR(10)	NOT NULL,
	PoliceUnitEmail		NVARCHAR(50)	NULL,
	PRIMARY KEY(PoliceUnitID));

--To create retention table
CREATE TABLE RETENTION(
	RetentionID		INT		NOT NULL	UNIQUE,
	RetentionName		NVARCHAR(25)	NOT NULL	UNIQUE,
	RetentionPd		INT		NOT NULL	UNIQUE,
	PRIMARY KEY(RetentionID));

--tO CREATE EMPLOYEE TITLE TABLE
CREATE TABLE EMPTITLE
(
    EmpTitleID        INT                    NOT NULL,
    EmpTitle        NVARCHAR(20)            NOT NULL,
    CONSTRAINT PK_EMPTITLE PRIMARY KEY(EmpTitleID)

);

--TO CREATE EMPLOYEE STATUS TABLE
CREATE TABLE EMPSTATUS
(
    EmpStatusID        INT                    NOT NULL,
    EmpStatus        NVARCHAR(20)            NOT NULL,
    CONSTRAINT PK_EMPSTATUS PRIMARY KEY(EmpStatusID)

);
--To create employee parent table. implemented with a subtable for uniform employees but primary data is located here.
CREATE TABLE EMPLOYEE(
    EmpID           	INT                     NOT NULL	UNIQUE,
    EmpFirstName    	NVARCHAR(25)            NOT NULL,
    EmpLastName    	NVARCHAR(25)            NOT NULL,
    EmpMidInit        	CHAR(1)                	NULL,
    EmpDOB        	DATE                    NOT NULL,
    EmpTitleID        	INT	           	 NOT NULL,
    EmpStartDate        DATE                    NOT NULL,
    EmpStatusID         INT		       	NOT NULL,
    EmpType		NVARCHAR(2)		NULL,
    CONSTRAINT PK_EMPLOYEE PRIMARY KEY(EmpID),
    FOREIGN KEY (EmpTitleID) REFERENCES EMPTITLE ON UPDATE CASCADE,
    FOREIGN KEY (EmpStatusID) REFERENCES EMPSTATUS ON UPDATE CASCADE
);


--TO CREATE UNIFORMED EMPLOYEE SUBTABLE
CREATE TABLE UNIFORMEMPLOYEE(
    EmpID           	INT                     NOT NULL	UNIQUE,
    EmpType		NVARCHAR(2)		NULL,
    PoliceUnitID	INT			NOT NULL,
	CONSTRAINT CHK_POLICEEMP CHECK (EmpType = 'UE'),
	FOREIGN KEY(PoliceUnitID) REFERENCES POLICEUNIT ON UPDATE CASCADE);

--TO CREATE CASE NO TABLE
CREATE TABLE CASENO(
	CaseNoID		INT		NOT NULL	UNIQUE,
	EmpID			INT		NOT NULL,
	PoliceUnitID		INT		NOT NULL,
	CaseNoOpenDate		DATE		NULL,
	CaseNoStatus		NVARCHAR(15)	NOT NULL,
	PRIMARY KEY(CaseNoID),
	FOREIGN KEY(EmpID) REFERENCES EMPLOYEE ON UPDATE CASCADE,
	FOREIGN KEY(PoliceUnitID) REFERENCES POLICEUNIT ON UPDATE CASCADE);

--TO CREATE LOCATION TABLE
CREATE TABLE LOCATION(
	LocationID		INT		NOT NULL	UNIQUE,
	LocationCategory	NVARCHAR(25)	NOT NULL,
	LocationName		NVARCHAR(25)	NOT NULL,
	LocationDescription	NVARCHAR(50)	NOT NULL,
	PRIMARY KEY(LocationID));

--TO CREATE INVENTORY PARENT TABLE. THIS TABLE DOES NOT SHARE ATTRIBUTES WITH CHILDREN.
--IMPLEMENTED USING PRIMARY KEY 
CREATE TABLE INVENTORY (
	InvID		INT		NOT NULL	UNIQUE,
	InvCategory	NVARCHAR(25)	NOT NULL,
	InvItemType	NVARCHAR(25)	NOT NULL,
	InvDescription	NVARCHAR(50)	NOT NULL,
	LocationID	INT		NOT NULL,
	InvDateReceived	DATE		NOT NULL,
	RetentionID	INT		NOT NULL,
	PRIMARY KEY(InvID),
	FOREIGN KEY(RetentionID) REFERENCES RETENTION ON UPDATE CASCADE,
	FOREIGN KEY(LocationID) REFERENCES LOCATION ON UPDATE CASCADE,
	CONSTRAINT CHK_INVCAT CHECK (InvCategory = 'Found' OR InvCategory = 'Personal' OR InvCategory = 'Evidence'));

--TO CREATE THE FOUND PROPERTY TABLE. CHILD OF INVENTORY TABLE
CREATE TABLE FOUNDPROPERTY(
	InvID				INT			NOT NULL,
	FPOwnerIdentified		NVARCHAR(1)		NOT NULL,
	FPOwnerFirstName		NVARCHAR(25)		NULL,
	FPOwnerLastName			NVARCHAR(25)		NULL,
	FPOwnerPhoneNo			NVARCHAR(10)		NULL,
	FPOwnerAddress			NVARCHAR(75)		NULL,
	EmpID				INT			NOT NULL,
	FOREIGN KEY (InvID) REFERENCES INVENTORY ON UPDATE CASCADE,
	FOREIGN KEY(EmpID) REFERENCES EMPLOYEE ON UPDATE CASCADE);

--TO CREATE THE PERSONAL PROPERTY TABLE. CHILD OF THE INVENTORY TABLE
CREATE TABLE PERSONALPROPERTY(
	InvID				INT			NOT NULL,
	PPOwnerFirstName		NVARCHAR(25)		NOT NULL,
	PPOwnerLastName			NVARCHAR(25)		NOT NULL,
	PPOwnerPhoneNo			NVARCHAR(10)		NOT NULL,
	PPOwnerAddress			NVARCHAR(75)		NOT NULL,
	EmpID				INT			NOT NULL,
	FOREIGN KEY(InvID) REFERENCES INVENTORY ON UPDATE CASCADE,
	FOREIGN KEY(EmpID) REFERENCES EMPLOYEE ON UPDATE CASCADE);

--TO CREATE THE EVIDENCE TABLE. CHILD OF THE INVENTORY TABLE. Parent of currency, narc, firearms, dna
CREATE TABLE EVIDENCE(
	InvID			INT		NOT NULL,
	CaseNoID		INT		NOT NULL,
	EmpID			INT		NOT NULL,
	InvItemType		NVARCHAR	NULL,
	FOREIGN KEY(InvID) REFERENCES INVENTORY ON UPDATE CASCADE,
	FOREIGN KEY(CaseNoID) REFERENCES CASENO ON UPDATE CASCADE,
	FOREIGN KEY(EmpID) REFERENCES EMPLOYEE ON UPDATE NO ACTION);

--TO CREATE CURRENCY TABLE. CHILD OF EVIDENCE. INCLUDES ALL ATTRIBUTES
CREATE TABLE CURRENCY(
	InvID			INT		NOT NULL,
	CaseNoID		INT		NOT NULL,
	EmpID			INT		NOT NULL,
	InvItemType		NVARCHAR	NULL,
	CurrTotalAmount		INT		NOT NULL,
	CurrBills		INT		NULL,
	CurrQuarters		INT		NULL,
	CurrDimes		INT		NULL,
	CurrNickels		INT		NULL,
	CurrPennies		INT		NULL,
	FOREIGN KEY(InvID) REFERENCES INVENTORY ON UPDATE CASCADE,
	FOREIGN KEY(EmpID) REFERENCES EMPLOYEE ON UPDATE NO ACTION,
	FOREIGN KEY (CaseNoID) REFERENCES CASENO ON UPDATE CASCADE,
	CONSTRAINT CHK_INVITEMTYPE CHECK (InvItemType = 'Currency'));

--TO CREATE NARCOTICS TABLE. CHILD OF EVIDENCE. IMPLEMENTED BY INCLUDING ALL ATTRIBUTES
CREATE TABLE NARCOTICS(
	InvID			INT		NOT NULL,
	CaseNoID		INT		NOT NULL,
	EmpID			INT		NOT NULL,
	InvItemType		NVARCHAR	NULL,
	NarWeight		NVARCHAR(10)	NOT NULL,
	NarLabTestingRequired	NVARCHAR(1)	NOT NULL,
	FOREIGN KEY(InvID) REFERENCES INVENTORY ON UPDATE CASCADE,
	FOREIGN KEY(EmpID) REFERENCES EMPLOYEE ON UPDATE NO ACTION,
	FOREIGN KEY (CaseNoID) REFERENCES CASENO ON UPDATE CASCADE,
	CONSTRAINT CHK_NARCITEMTYPE CHECK (InvItemType = 'Narcotics'));

--TO CREATE FIREARMS TABLE. CHILD OF EVIDENE. IMPLEMENTED BY INCLUDING ALL ATTRIBUTES
CREATE TABLE FIREARMS(
	InvID			INT		NOT NULL,
	CaseNoID		INT		NOT NULL,
	EmpID			INT		NOT NULL,
	InvItemType		NVARCHAR	NULL,
	FireSerialNo		NVARCHAR(10)	NULL,
	FireRifleOrHandgun	NVARCHAR(7)	NOT NULL,
	FireMake		NVARCHAR(25)	NULL,
	FireModel		NVARCHAR(25)	NULL,
	FOREIGN KEY(InvID) REFERENCES INVENTORY ON UPDATE CASCADE,
	FOREIGN KEY(EmpID) REFERENCES EMPLOYEE ON UPDATE NO ACTION,
	FOREIGN KEY (CaseNoID) REFERENCES CASENO ON UPDATE CASCADE,
	CONSTRAINT CHK_FIREITEMTYPE CHECK (InvItemType = 'Firearms'));

--TO CREATE DNAKIT TABLE. CHILD OF EVIDENCE. IMPLEMENTED BY INCLUDING ALL ATTRIBUTES
CREATE TABLE DNAKIT(
	InvID			INT		NOT NULL,
	CaseNoID		INT		NOT NULL,
	EmpID			INT		NOT NULL,
	InvItemType		NVARCHAR	NULL,
	DNAOwner		NVARCHAR(30)	NOT NULL,
	DNATestingStatus	NVARCHAR(10)	NOT NULL,
	FOREIGN KEY(InvID) REFERENCES INVENTORY ON UPDATE CASCADE,
	FOREIGN KEY(EmpID) REFERENCES EMPLOYEE ON UPDATE NO ACTION,
	FOREIGN KEY (CaseNoID) REFERENCES CASENO ON UPDATE CASCADE,
	CONSTRAINT CHK_DNAITEMTYPE CHECK (InvItemType = 'DNAkit'));
